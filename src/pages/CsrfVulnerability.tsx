
import React, { useState } from 'react';
import { AlertCircle, Info, User } from 'lucide-react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { useToast } from '@/components/ui/use-toast';

interface UserProfile {
  email: string;
  name: string;
}

const CsrfVulnerability = () => {
  const [profile, setProfile] = useState<UserProfile>({
    email: 'user@example.com',
    name: 'John Doe'
  });
  const [formData, setFormData] = useState<UserProfile>(profile);
  const [showHint, setShowHint] = useState(false);
  const [showCsrfDemo, setShowCsrfDemo] = useState(false);
  const { toast } = useToast();

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value
    });
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setProfile(formData);
    toast({
      title: "Profile Updated",
      description: "Your profile has been successfully updated."
    });

    if (formData.email !== profile.email) {
      setTimeout(() => {
        toast({
          title: "CSRF Vulnerability Exploited",
          description: "Email address changed without proper CSRF protection.",
          variant: "destructive",
        });
      }, 500);
    }
  };

  const toggleHint = () => {
    setShowHint(!showHint);
  };

  const toggleCsrfDemo = () => {
    setShowCsrfDemo(!showCsrfDemo);
  };

  return (
    <div className="max-w-3xl mx-auto">
      <h1 className="text-3xl font-bold mb-6 text-hacker-red">Cross-Site Request Forgery (CSRF) Vulnerability</h1>
      
      <div className="mb-8 p-4 border border-purple-500 rounded-md bg-purple-500/10">
        <div className="flex items-start">
          <Info className="h-6 w-6 text-purple-500 mr-2 flex-shrink-0 mt-0.5" />
          <div>
            <h2 className="text-lg font-bold text-purple-500">What is CSRF?</h2>
            <p className="mt-1 text-gray-300">
              Cross-Site Request Forgery is an attack that forces authenticated users to execute unwanted actions on a web application
              they're currently logged into. It works by tricking the victim's browser into sending a malicious request along with
              the user's session cookie and any other automatically included authentication information.
            </p>
          </div>
        </div>
      </div>

      <div className="grid gap-6 md:grid-cols-2">
        <Card className="bg-black/50 border border-purple-500">
          <CardHeader>
            <CardTitle className="text-white flex items-center">
              <User className="h-5 w-5 mr-2" />
              User Profile (Vulnerable to CSRF)
            </CardTitle>
            <CardDescription className="text-gray-400">
              This form doesn't implement CSRF tokens
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label htmlFor="name" className="block text-sm font-medium text-gray-400">Name</label>
                <Input
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  className="bg-gray-900 border-gray-700"
                  required
                />
              </div>
              <div>
                <label htmlFor="email" className="block text-sm font-medium text-gray-400">Email</label>
                <Input
                  id="email"
                  name="email"
                  type="email"
                  value={formData.email}
                  onChange={handleInputChange}
                  className="bg-gray-900 border-gray-700"
                  required
                />
              </div>
              
              <div className="flex gap-2">
                <Button type="submit" className="bg-purple-600 hover:bg-purple-700">
                  Update Profile
                </Button>
                
                <Button 
                  type="button" 
                  variant="outline" 
                  onClick={toggleHint} 
                  className="border-yellow-500 text-yellow-500 hover:bg-yellow-500/20"
                >
                  {showHint ? "Hide Hint" : "Show Hint"}
                </Button>
              </div>
            </form>
          </CardContent>
        </Card>

        <div className="space-y-6">
          <Card className="bg-black/50 border border-gray-700">
            <CardHeader>
              <CardTitle className="text-white">Current Profile Information</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-2">
                <div>
                  <span className="text-sm text-gray-400">Name:</span>
                  <span className="block text-white">{profile.name}</span>
                </div>
                <div>
                  <span className="text-sm text-gray-400">Email:</span>
                  <span className="block text-white">{profile.email}</span>
                </div>
              </div>
            </CardContent>
          </Card>

          <Button 
            variant="outline"
            onClick={toggleCsrfDemo}
            className="w-full border-red-500 text-red-500 hover:bg-red-500/20"
          >
            {showCsrfDemo ? "Hide CSRF Demo" : "Show CSRF Demo"}
          </Button>

          {showCsrfDemo && (
            <Card className="bg-red-500/10 border border-red-500">
              <CardHeader className="pb-2">
                <CardTitle className="text-red-500">CSRF Attack Demo</CardTitle>
                <CardDescription className="text-gray-400">
                  This demonstrates a malicious website that could perform a CSRF attack
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="bg-black p-4 rounded-md mb-4">
                  <div className="text-white mb-2">Malicious Website</div>
                  <div className="text-sm text-gray-400 mb-4">
                    This page contains a hidden form that submits automatically
                  </div>
                  <div className="text-xs terminal-text">
                    <pre>{`<form action="https://vulnerable-site.com/profile" method="POST" id="csrf-form">
  <input type="hidden" name="email" value="hacked@evil.com">
  <input type="hidden" name="name" value="Hacked Account">
</form>

<script>
  document.getElementById("csrf-form").submit();
</script>`}</pre>
                  </div>
                </div>

                <Button 
                  className="w-full bg-red-600 hover:bg-red-700"
                  onClick={() => {
                    setFormData({
                      name: profile.name,
                      email: 'hacked@attacker.com'
                    });
                    setTimeout(() => {
                      handleSubmit(new Event('submit') as any);
                    }, 500);
                  }}
                >
                  Simulate CSRF Attack
                </Button>
              </CardContent>
            </Card>
          )}

          {showHint && (
            <Card className="bg-yellow-500/10 border border-yellow-500">
              <CardHeader className="pb-2">
                <CardTitle className="text-yellow-500">Hint</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-300 mb-2">The profile update form is missing:</p>
                <ul className="list-disc pl-5 text-gray-400 space-y-2">
                  <li>CSRF tokens to validate that requests are coming from legitimate sources</li>
                  <li>Any origin checking or referrer validation</li>
                  <li>SameSite cookie restrictions</li>
                </ul>
              </CardContent>
            </Card>
          )}
        </div>
      </div>

      <Card className="mt-6 bg-black/50 border border-red-500">
        <CardHeader>
          <CardTitle className="flex items-center">
            <AlertCircle className="h-5 w-5 text-red-500 mr-2" />
            <span>Prevention Techniques</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <ul className="list-disc pl-5 text-gray-300 space-y-2">
            <li>Implement anti-CSRF tokens in forms</li>
            <li>Use SameSite cookie attribute (Strict or Lax)</li>
            <li>Check the Origin and Referer headers</li>
            <li>Implement custom request headers for AJAX requests</li>
            <li>Require re-authentication for sensitive actions</li>
            <li>Use the double-submit cookie pattern</li>
            <li>Implement Content-Type checking for API endpoints</li>
          </ul>
        </CardContent>
      </Card>
    </div>
  );
};

export default CsrfVulnerability;
